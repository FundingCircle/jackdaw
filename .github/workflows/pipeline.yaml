run-name: Jackdaw build
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    container: clojure:latest
    services:
      kafka:
        image: confluentinc/cp-kafka:5.1.3
        env:
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
          KAFKA_BROKER_ID: 1
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      schema-registry:
        image: confluentinc/cp-schema-registry:5.1.2
        env:
          SCHEMA_REGISTRY_HOST_NAME: schema-registry
          SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      kafka-rest:
        image: confluentinc/cp-kafka-rest:6.1.1
        env:
          KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_REST_BOOTSTRAP_SERVERS: kafka:9092
          KAFKA_REST_LISTENERS: http://0.0.0.0:8082
          KAFKA_REST_SCHEMA_REGISTRY: http://schema-registry:8081
          KAFKA_REST_HOST_NAME: kafka-rest
      zookeeper:
        image: confluentinc/cp-zookeeper:5.1.3
        env: 
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
    steps:
      - name: permissions-test
        # with:
        #   FOO: ${{ secrets.test.FOO }}
        #   BAR: ${{ secrets.FOO }}
        env:
           MY_SECRET: ${{ secrets.test.FOO }}
           ANOTHER: ${{ secrets.FOO }}
        run: echo $(printf %.1s "$MY_SECRET")
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          # TODO:
          fetch-depth: 100
      - name: build
        # TODO:
        run: | 
          git config --global --add safe.directory /__w/jackdaw/jackdaw
          lein kaocha
        env: 
          KAFKA_BOOTSTRAP_SERVERS: kafka
          ZOOKEEPER_HOST: zoopkeeper
          SCHEMA_REGISTRY_HOST: schema-registry
          KAFKA_REST_PROXY_HOST: kafka-rest
      - name: lint
        run: lein clj-kondo --lint src test || true

