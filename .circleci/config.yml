---
version: 2

jobs:
  build:
    docker:
      - image: quay.io/fundingcircle/clojure:latest
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    environment:
      _JAVA_OPTIONS: "-Xms1024m -Xmx3072m"
    steps:
      - checkout
      - &restore-cache
        restore_cache:
          keys:
            - libs-cache-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
            - libs-cache-{{ checksum "project.clj" }}
            - libs-cache-
      - run:
          command: nohup confluent start
      - run:
          command: confluent status
      - save_cache:
          key: libs-cache-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - ~/.m2/
      - run:
          command: lein test

  deploy-staging:
    docker:
      - image: circleci/clojure:latest
    environment:
      GIT_AUTHOR_NAME: CircleCI
      GIT_AUTHOR_EMAIL: circleci@circleci.com

    steps:
      - checkout
      - *restore-cache
      - run:
          command: git config --global user.name $GIT_AUTHOR_NAME
      - run:
          command: git config --global user.email $GIT_AUTHOR_EMAIL
      - run:
          command: lein deploy snapshots
  deploy-release:
    docker:
      - image: circleci/clojure:latest
    environment:
      GIT_AUTHOR_NAME: CircleCI
      GIT_AUTHOR_EMAIL: circleci@circleci.com

    steps:
      - checkout
      - *restore-cache
      - run:
          command: git config --global user.name $GIT_AUTHOR_NAME
      - run:
          command: git config --global user.email $GIT_AUTHOR_EMAIL
      - run:
          command: lein deploy

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          context: org-global
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              ignore: master
      - deploy-release:
          requires:
            - build
          filters:
            branches:
              only: master
